<!-- extract the movieGenreVM type MovieGenreViewModel is being passed to the view? -->
@model MvcMovie.Models.MovieGenreViewModel

@{
ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<!--filter form will make a get request to this current route-->
<form asp-controller="Movies" asp-action="Index" method="get">
    <p class="">
        <!--asp-for: MovieGenre is used for the key in search query-->
        <!--asp-items: automatically generate a list of option of genres to select-->
        <select asp-for="MovieGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>

        <!--name: SearchString is used for the key in search query-->
        Title: <input type="text" name="SearchString">
        <!--value: Filter is just the text-->
        <input type="submit" value="Filter">
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <!--TODO: here-->
                @Html.DisplayNameFor(model => model.Movies![0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movies![0].Rating)
            </th>

            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies!) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
